Index: src/main/java/spaceinvaders/FirebaseTool.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package spaceinvaders;\r\n\r\nimport com.google.auth.oauth2.GoogleCredentials;\r\nimport com.google.firebase.FirebaseApp;\r\nimport com.google.firebase.FirebaseOptions;\r\n\r\n//새로 추가 한것\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseAuthException;\r\nimport com.google.firebase.auth.UserRecord;\r\nimport com.google.firebase.database.*;\r\n\r\nimport javax.swing.*;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.HashMap;\r\nimport java.util.function.Consumer;\r\n\r\npublic class FirebaseTool {\r\n    private static final String DOMAIN_NAME = \"https://space-5d8e0-default-rtdb.firebaseio.com/\";\r\n    private static final String KEY_LOCATION = \"\\\\src\\\\main\\\\resources\\\\key.json\";\r\n    private static FirebaseTool firebaseTool = null;\r\n    private FirebaseApp firebaseApp;\r\n    private DatabaseReference databaseReference;\r\n\r\n    private GlobalStorage globalStorage;\r\n\r\n    public static FirebaseTool getInstance() {\r\n        if (firebaseTool == null) {\r\n            firebaseTool = new FirebaseTool();\r\n        }\r\n\r\n        return firebaseTool;\r\n    }\r\n\r\n    public FirebaseTool() {\r\n        initialize();\r\n        globalStorage = GlobalStorage.getInstance();\r\n    }\r\n\r\n    public void initialize() {\r\n        try {\r\n            FileInputStream serviceAccount = new FileInputStream(System.getProperty(\"user.dir\") + KEY_LOCATION);\r\n            FirebaseOptions options = FirebaseOptions.builder()\r\n                    .setCredentials(GoogleCredentials.fromStream(serviceAccount))\r\n                    .setDatabaseUrl(DOMAIN_NAME)\r\n                    .build();\r\n\r\n            firebaseApp = FirebaseApp.initializeApp(options, \"space-invander-member-list\");\r\n\r\n            if (firebaseApp != null) {\r\n                System.out.println(firebaseApp.getName());\r\n\r\n                databaseReference = FirebaseDatabase.getInstance(firebaseApp).getReference();\r\n            }\r\n\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public boolean Login(String id, String password) {\r\n        try {\r\n            FirebaseAuth firebaseAuth = FirebaseAuth.getInstance(firebaseApp);\r\n\r\n            UserRecord userRecord = firebaseAuth.getUserByEmail(id);\r\n\r\n            if (userRecord != null) {\r\n                if (userRecord.getEmail().equals(id)) {\r\n                    globalStorage.setUserID(id);\r\n                    getUserBestScore(id);\r\n                    getUserProfileImage(id);\r\n                    getUserTheme(id);\r\n                    JOptionPane.showMessageDialog(null, \"로그인이 정상적으로 처리되었습니다.\");\r\n                    return true;\r\n                }\r\n            }\r\n\r\n        } catch (NullPointerException e) {\r\n            //e.printStackTrace();\r\n            JOptionPane.showMessageDialog(null, \"아이디와 비밀번호를 확입하세요.\");\r\n            return false;\r\n        } catch (FirebaseAuthException e) {\r\n            //throw new RuntimeException(e);\r\n            JOptionPane.showMessageDialog(null, \"아이디와 비밀번호를 확인하세요.\");\r\n            return false;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public void Signup(String id, String password) {\r\n        try {\r\n            FirebaseAuth firebaseAuth = FirebaseAuth.getInstance(firebaseApp);\r\n            firebaseAuth.createUser(new UserRecord.CreateRequest()\r\n                    .setEmail(id)\r\n                    .setEmailVerified(false)\r\n                    .setPassword(password)\r\n                    .setDisplayName(id));\r\n\r\n            DatabaseReference initReference = FirebaseDatabase.getInstance(firebaseApp).getReference();\r\n\r\n            initReference.child(\"user\").child(id.split(\"@\")[0]).child(\"profileimage\").setValue(\"1\", null);\r\n            initReference.child(\"user\").child(id.split(\"@\")[0]).child(\"bestscore\").setValue(\"0\", null);\r\n            initReference.child(\"user\").child(id.split(\"@\")[0]).child(\"theme\").setValue(\"1\", null);\r\n\r\n            JOptionPane.showMessageDialog(null, \"회원가입에 정상적으로 처리되었습니다.\");\r\n\r\n        } catch (NullPointerException e) {\r\n            e.printStackTrace();\r\n            JOptionPane.showMessageDialog(null, \"회원가입에 문제가 생겼습니다.\");\r\n        } catch (FirebaseAuthException e) {\r\n            JOptionPane.showMessageDialog(null, \"회원가입에 문제가 생겼습니다.\");\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public String getUserProfileImage(String id) {\r\n        String userProfileSelect = \"1\";\r\n\r\n        try {\r\n            DatabaseReference userProfileImageDatabase = FirebaseDatabase.getInstance(firebaseApp).getReference();\r\n\r\n            userProfileImageDatabase.child(\"user\")\r\n                    .child(id.split(\"@\")[0])\r\n                    .child(\"profileimage\")\r\n                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(DataSnapshot dataSnapshot) {\r\n                            String select = dataSnapshot.getValue(String.class);\r\n                            System.out.println(\"User Profile Data Receivced \" + select);\r\n                            globalStorage.setUserProfileImage(select);\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(DatabaseError databaseError) {\r\n                            System.out.println(\"User Profile Data Error \" + databaseError);\r\n                        }\r\n                    });\r\n\r\n        } catch (NullPointerException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return userProfileSelect;\r\n    }\r\n\r\n    public String getUserTheme(String id) {\r\n        String userThemeSelect = \"1\";\r\n\r\n        try {\r\n            DatabaseReference userThemeDatabase = FirebaseDatabase.getInstance(firebaseApp).getReference();\r\n\r\n            userThemeDatabase.child(\"user\")\r\n                    .child(id.split(\"@\")[0])\r\n                    .child(\"theme\")\r\n                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(DataSnapshot dataSnapshot) {\r\n                            String select = dataSnapshot.getValue(String.class);\r\n                            System.out.println(\"User Theme Data Receivced \" + select);\r\n                            globalStorage.setUserTheme(select);\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(DatabaseError databaseError) {\r\n                            System.out.println(\"User Theme Data Error \" + databaseError);\r\n\r\n                        }\r\n                    });\r\n\r\n        } catch (NullPointerException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return userThemeSelect;\r\n    }\r\n\r\n    public String getUserBestScore(String id) {\r\n        String userBestScore = \"1\";\r\n\r\n        try {\r\n            DatabaseReference userScoreDatabase = FirebaseDatabase.getInstance(firebaseApp).getReference();\r\n\r\n            userScoreDatabase.child(\"user\")\r\n                    .child(id.split(\"@\")[0])\r\n                    .child(\"bestscore\")\r\n                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                    String score = dataSnapshot.getValue(String.class);\r\n                    System.out.println(\"User Score Data Receivced \" + score);\r\n                    globalStorage.setUserBestScore(score);\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(DatabaseError databaseError) {\r\n                    System.out.println(\"User Score Data Error \" + databaseError);\r\n\r\n                }\r\n            });\r\n\r\n        } catch (NullPointerException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return userBestScore;\r\n    }\r\n\r\n    public void getAllUserBestScore(Consumer<ArrayList<HashMap<String, String>>> callback) {\r\n        DatabaseReference userAllScoreDatabase = FirebaseDatabase.getInstance(firebaseApp).getReference();\r\n\r\n        userAllScoreDatabase.child(\"user\")\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(DataSnapshot dataSnapshot) {\r\n                        ArrayList<HashMap<String, String>> userAllBestScore = new ArrayList<HashMap<String, String>>();\r\n                        for (DataSnapshot ds : dataSnapshot.getChildren()) {\r\n                            String id = ds.getKey();\r\n                            String bestscore = ds.child(\"bestscore\").getValue(String.class);\r\n\r\n                            HashMap<String, String> userScore = new HashMap<String, String>();\r\n                            userScore.put(\"id\", id);\r\n                            userScore.put(\"bestscore\", bestscore);\r\n                            userAllBestScore.add(userScore);\r\n                        }\r\n                        // 데이터 가져오기 완료 후 내림차순으로 정렬\r\n                        Collections.sort(userAllBestScore, new Comparator<HashMap<String, String>>() {\r\n                            @Override\r\n                            public int compare(HashMap<String, String> o1, HashMap<String, String> o2) {\r\n                                return Integer.compare(Integer.parseInt(o2.get(\"bestscore\")), Integer.parseInt(o1.get(\"bestscore\")));\r\n                            }\r\n                        });\r\n                        callback.accept(userAllBestScore);\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(DatabaseError databaseError) {\r\n                        System.out.println(\"Data Error \" + databaseError);\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void setUserBestScore(String id, String bestscore) {\r\n        try {\r\n            DatabaseReference userScoreDatabase = FirebaseDatabase.getInstance(firebaseApp).getReference();\r\n\r\n            userScoreDatabase.child(\"user\").child(id.split(\"@\")[0]).child(\"bestscore\").setValue(bestscore, new DatabaseReference.CompletionListener() {\r\n                @Override\r\n                public void onComplete(DatabaseError databaseError, DatabaseReference databaseReference) {\r\n                    globalStorage.setUserBestScore(bestscore);\r\n                }\r\n            });\r\n\r\n        } catch (DatabaseException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void setUserProfileImage(String id, String select) {\r\n        try {\r\n            DatabaseReference userProfileImageDatabase = FirebaseDatabase.getInstance(firebaseApp).getReference();\r\n\r\n            userProfileImageDatabase.child(\"user\").child(id.split(\"@\")[0]).child(\"profileimage\").setValue(select, new DatabaseReference.CompletionListener() {\r\n                @Override\r\n                public void onComplete(DatabaseError databaseError, DatabaseReference databaseReference) {\r\n                    globalStorage.setUserProfileImage(select);\r\n                }\r\n            });\r\n\r\n        } catch (DatabaseException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void setUserTheme(String id, String select) {\r\n        try {\r\n            DatabaseReference userProfileImageDatabase = FirebaseDatabase.getInstance(firebaseApp).getReference();\r\n\r\n            userProfileImageDatabase.child(\"user\").child(id.split(\"@\")[0]).child(\"theme\").setValue(select, new DatabaseReference.CompletionListener() {\r\n                @Override\r\n                public void onComplete(DatabaseError databaseError, DatabaseReference databaseReference) {\r\n                    globalStorage.setUserTheme(select);\r\n                }\r\n            });\r\n\r\n        } catch (DatabaseException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/spaceinvaders/FirebaseTool.java b/src/main/java/spaceinvaders/FirebaseTool.java
--- a/src/main/java/spaceinvaders/FirebaseTool.java	(revision cfcc6cf0945722afde64ead0cd6dad2495b4ab62)
+++ b/src/main/java/spaceinvaders/FirebaseTool.java	(date 1681643381236)
@@ -212,6 +212,7 @@
     }
 
     public void getAllUserBestScore(Consumer<ArrayList<HashMap<String, String>>> callback) {
+
         DatabaseReference userAllScoreDatabase = FirebaseDatabase.getInstance(firebaseApp).getReference();
 
         userAllScoreDatabase.child("user")
Index: src/main/java/spaceinvaders/Mypage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package spaceinvaders;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport javax.swing.ImageIcon;\r\n\r\n\r\npublic class Mypage extends JFrame {\r\n    private FirebaseTool firebaseTool;\r\n    private GlobalStorage globalStorage;\r\n    private String currentTheme;\r\n    private String currentProfilePicture;\r\n    private JComboBox<String> themeSelector;\r\n    private JLabel background;\r\n    private JComboBox<String> pictureSelector;\r\n    private JLabel profileLabel;\r\n\r\n    public Mypage() {\r\n        setTitle(\"Spaceinvaders\");\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        setSize(800, 600);\r\n        setLocationRelativeTo(null);\r\n        setResizable(false);\r\n\r\n        firebaseTool = FirebaseTool.getInstance();\r\n        globalStorage = GlobalStorage.getInstance();\r\n\r\n        JPanel panel = new JPanel();\r\n        panel.setLayout(null);\r\n\r\n        String[] themes = {\"1\", \"2\", \"3\", \"4\", \"5\"};\r\n        themeSelector = new JComboBox<>(themes);\r\n        themeSelector.setBounds(450, 420, 305, 30);\r\n        panel.add(themeSelector);\r\n\r\n        String[] profilePictures = {\"1\", \"2\", \"3\", \"4\", \"5\"};\r\n        pictureSelector = new JComboBox<>(profilePictures);\r\n        pictureSelector.setBounds(450, 460, 305, 30);\r\n        panel.add(pictureSelector);\r\n\r\n        // add event listeners to handle theme and profile picture selection\r\n        themeSelector.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                currentTheme = (String) themeSelector.getSelectedItem();\r\n                firebaseTool.setUserTheme(globalStorage.getUserID(), currentTheme);\r\n                globalStorage.setUserTheme(currentTheme); // 햔재 테마 업데이트\r\n                applyTheme(currentTheme);\r\n            }\r\n        });\r\n\r\n        pictureSelector.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                currentProfilePicture = (String) pictureSelector.getSelectedItem();\r\n                firebaseTool.setUserProfileImage(globalStorage.getUserID(), currentProfilePicture);\r\n                globalStorage.setUserProfileImage(currentProfilePicture); // 현재 프로필 이미지 업데이트\r\n                applyProfilePicture(currentProfilePicture);\r\n            }\r\n        });\r\n\r\n        background = new JLabel();\r\n        background.setBounds(0, 0, getWidth(), getHeight());\r\n        panel.add(background);\r\n        getContentPane().add(panel);\r\n\r\n        System.out.println(\"user theme : \" + globalStorage.getUserTheme() + \" user profile : \" + globalStorage.getUserProfileImage());\r\n\r\n        applyTheme(globalStorage.getUserTheme());\r\n        applyProfilePicture(globalStorage.getUserProfileImage());\r\n\r\n        setVisible(true);\r\n    }\r\n\r\n    private void applyTheme(String theme) {\r\n        String imagePath = \"/sprites/Theme1.jpg\";\r\n        int width = 800; // 원하는 이미지 폭\r\n        int height = 600; // 원하는 이미지 높이\r\n\r\n        if (theme.equals(\"1\")) {\r\n            imagePath = \"/sprites/Theme1.jpg\";\r\n        } else if (theme.equals(\"2\")) {\r\n            imagePath = \"/sprites/Theme2.jpg\";\r\n        } else if (theme.equals(\"3\")) {\r\n            imagePath = \"/sprites/Theme3.jpg\";\r\n        } else if (theme.equals(\"4\")) {\r\n            imagePath = \"/sprites/Theme4.jpg\";\r\n        } else if (theme.equals(\"5\")) {\r\n            imagePath = \"/sprites/Theme5.jpg\";\r\n        }\r\n\r\n        ImageIcon icon = new ImageIcon(getClass().getResource(imagePath));\r\n        Image image = icon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);\r\n        icon = new ImageIcon(image);\r\n        background.setIcon(icon);\r\n    }\r\n\r\n\r\n    private void applyProfilePicture(String picture) {\r\n        String imagePath = \"/sprites/Profile1.jpg\"; // 기본 프로필 사진 경로\r\n        int profileWidth = 100; // 프로필 사진 폭\r\n        int profileHeight = 100; // 프로필 사진 높이\r\n\r\n        if (picture.equals(\"1\")) {\r\n            imagePath = \"/sprites/Profile1.jpg\";\r\n        } else if (picture.equals(\"2\")) {\r\n            imagePath = \"/sprites/Profile2.jpg\";\r\n        } else if (picture.equals(\"3\")) {\r\n            imagePath = \"/sprites/Profile3.jpg\";\r\n        } else if (picture.equals(\"4\")) {\r\n            imagePath = \"/sprites/Profile4.jpg\";\r\n        } else if (picture.equals(\"5\")) {\r\n            imagePath = \"/sprites/Profile5.jpg\";\r\n        }\r\n\r\n        ImageIcon profileIcon = new ImageIcon(getClass().getResource(imagePath));\r\n        Image profileImage = profileIcon.getImage().getScaledInstance(profileWidth, profileHeight, Image.SCALE_SMOOTH);\r\n        profileIcon = new ImageIcon(profileImage);\r\n\r\n        /*// 기존에 추가된 프로필 사진 라벨이 있다면 먼저 제거합니다.\r\n        if (profileLabel != null) {\r\n            background.remove(profileLabel);\r\n        }\r\n\r\n*/\r\n        profileLabel = new JLabel(profileIcon);\r\n        profileLabel.setBounds(550, 200, profileWidth, profileHeight);\r\n\r\n        background.add(profileLabel); // background 라벨 위에 새로운 프로필 사진을 추가\r\n        background.setComponentZOrder(profileLabel, 0); // profileLabel 라벨이 background 라벨 위에 나타나도록 설정\r\n        background.validate();\r\n        //applyTheme(currentTheme);\r\n    }\r\n/*    public static void main(String[] args){\r\n\r\n        Mypage mypage = new Mypage();\r\n\r\n\r\n    } */\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/spaceinvaders/Mypage.java b/src/main/java/spaceinvaders/Mypage.java
--- a/src/main/java/spaceinvaders/Mypage.java	(revision cfcc6cf0945722afde64ead0cd6dad2495b4ab62)
+++ b/src/main/java/spaceinvaders/Mypage.java	(date 1681550292904)
@@ -74,7 +74,7 @@
         setVisible(true);
     }
 
-    private void applyTheme(String theme) {
+    public void applyTheme(String theme) {
         String imagePath = "/sprites/Theme1.jpg";
         int width = 800; // 원하는 이미지 폭
         int height = 600; // 원하는 이미지 높이
@@ -98,7 +98,7 @@
     }
 
 
-    private void applyProfilePicture(String picture) {
+    public void applyProfilePicture(String picture) {
         String imagePath = "/sprites/Profile1.jpg"; // 기본 프로필 사진 경로
         int profileWidth = 100; // 프로필 사진 폭
         int profileHeight = 100; // 프로필 사진 높이
Index: src/main/java/spaceinvaders/Window.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package spaceinvaders;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport javax.swing.ImageIcon;\r\n\r\npublic class Window extends JFrame {\r\n    private FirebaseTool firebaseTool;\r\n\r\n    private GlobalStorage globalStorage;\r\n\r\n    public Window() {\r\n        setTitle(\"Spaceinvaders\");\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        setSize(800, 600);\r\n        setLocationRelativeTo(null);\r\n        new BackgroundMusic();\r\n\r\n    }\r\n\r\n    public void showHowTo(){\r\n        Frame ht = new Frame();\r\n        ht.setSize(500, 400);\r\n\r\n\r\n//        JPanel panel = new JPanel(){\r\n//            public void paintComponent(Graphics g){\r\n//                super.paintComponent(g);\r\n//\r\n//\r\n//                g.setColor(Color.BLACK);\r\n//                g.fillRect(150, 100, 500, 400);\r\n//            }\r\n//        };\r\n    }\r\n\r\n\r\n    public void showWindow(){\r\n        setVisible(true);\r\n        JPanel panel = new JPanel() {\r\n\r\n            @Override\r\n            public void paintComponent(Graphics g) {\r\n                super.paintComponent(g);\r\n                // 이미지 파일 경로를 적절히 수정하세요.\r\n                ImageIcon icon = new ImageIcon(getClass().getResource(\"/sprites/windowBackground.png\"));\r\n                Image image = icon.getImage();\r\n                g.drawImage(image, 0, 0, getWidth(), getHeight(), null);\r\n\r\n                ImageIcon btImage = new ImageIcon(getClass().getResource(\"/sprites/windowButtons.png\"));\r\n                g.drawImage(btImage.getImage(), 59, 30, 690, 510, null);\r\n\r\n//                ImageIcon optionButton = new ImageIcon(getClass().getResource(\"/sprites/optionButton.png\"));\r\n//                g.drawImage(optionButton.getImage(), 440,430,320,110, null);\r\n\r\n\r\n            }\r\n        };\r\n\r\n        panel.setLayout(null);\r\n\r\n        JButton button1 = new JButton();\r\n        JButton button2 = new JButton();\r\n        JButton button3 = new JButton();\r\n        JButton ranking = new JButton();\r\n        JButton mypage = new JButton();\r\n        JButton Info = new JButton();\r\n\r\n        //버튼 투명하게\r\n        button1.setOpaque(false);\r\n        button2.setOpaque(false);\r\n        button3.setOpaque(false);\r\n        ranking.setOpaque(false);\r\n        mypage.setOpaque(false);\r\n        Info.setOpaque(false);\r\n\r\n        //버튼 테투리 없애기\r\n        button1.setBorderPainted(false);\r\n        button2.setBorderPainted(false);\r\n        button3.setBorderPainted(false);\r\n        ranking.setBorderPainted(false);\r\n        mypage.setBorderPainted(false);\r\n        Info.setBorderPainted(false);\r\n\r\n        button1.setBounds(59, 30, 300, 110);\r\n        button2.setBounds(59, 160, 300, 110);\r\n        button3.setBounds(59, 300, 300, 110);\r\n        ranking.setBounds(59,430,300,110);\r\n        mypage.setBounds(410,300,305, 110 );\r\n        Info.setBounds(410,490,305, 110 );\r\n\r\n        button1.setFont(new Font(\"Arial\", Font.PLAIN, 60));\r\n        button2.setFont(new Font(\"Arial\", Font.PLAIN, 20));\r\n        button3.setFont(new Font(\"Arial\", Font.PLAIN, 20));\r\n\r\n        button1.setBackground(new Color(36, 54, 105));\r\n        button2.setBackground(new Color(36, 54, 105));\r\n        button3.setBackground(new Color(36, 54, 105));\r\n        ranking.setBackground(new Color(36,54, 105 ));\r\n        mypage.setBackground(new Color(36,54, 105 ));\r\n        Info.setBackground(new Color(36,54, 105 ));\r\n\r\n        button2.setForeground(Color.WHITE);\r\n        button1.setForeground(Color.WHITE);\r\n        button3.setForeground(Color.WHITE);\r\n        ranking.setForeground(Color.WHITE);\r\n        mypage.setForeground(Color.WHITE);\r\n        Info.setForeground(Color.WHITE);\r\n\r\n        button3.addActionListener(new ActionListener() {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                Thread thread = new Thread(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n\r\n                        Game game = new Game(\"1p\");\r\n                        game.gameLoop();\r\n                    }\r\n                });\r\n                thread.start();\r\n            }\r\n        });\r\n\r\n        button1.addActionListener(new ActionListener() {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                Thread thread = new Thread(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n\r\n                        Game game = new Game(\"2p\");\r\n                        game.gameLoop();\r\n                    }\r\n                });\r\n                thread.start();\r\n            }\r\n        });\r\n\r\n        ranking.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                Thread thread = new Thread(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        Ranking ranking = new Ranking();\r\n                    }\r\n                });\r\n                thread.start();\r\n            }\r\n        });\r\n\r\n        mypage.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                Thread thread = new Thread(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        Mypage mypage = new Mypage();\r\n                    }\r\n                });\r\n                thread.start();\r\n            }\r\n        });\r\n\r\n\r\n        Info.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n                        HowToPlay howToPlay = new HowToPlay();\r\n                        howToPlay.showHowToPlay();\r\n                    }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n        panel.add(button1);\r\n        panel.add(button2);\r\n        panel.add(button3);\r\n        panel.add(Info);\r\n        panel.add(ranking);\r\n        panel.add(mypage);\r\n\r\n        getContentPane().add(panel);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    public static void main(String[] args) {\r\n        SwingUtilities.invokeLater(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                LoginPage loginPage = new LoginPage();\r\n                loginPage.setLoginLiscctener(new LoginPage.LoginListener() {\r\n                    @Override\r\n                    public void loginSuccess(String email) {\r\n                        Window window = new Window();\r\n                        window.showWindow();\r\n\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/spaceinvaders/Window.java b/src/main/java/spaceinvaders/Window.java
--- a/src/main/java/spaceinvaders/Window.java	(revision cfcc6cf0945722afde64ead0cd6dad2495b4ab62)
+++ b/src/main/java/spaceinvaders/Window.java	(date 1681643679447)
@@ -49,6 +49,7 @@
                 Image image = icon.getImage();
                 g.drawImage(image, 0, 0, getWidth(), getHeight(), null);
 
+
                 ImageIcon btImage = new ImageIcon(getClass().getResource("/sprites/windowButtons.png"));
                 g.drawImage(btImage.getImage(), 59, 30, 690, 510, null);
 
